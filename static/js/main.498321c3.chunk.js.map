{"version":3,"sources":["components/ExchangeHeader/logo.svg","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChange","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Div","div","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","parseFloat","Number","quotes","USD","toFixed","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.498321c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nexport default function Coin (props) {\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        // Prevent the default action of submitting the form\r\n        event.preventDefault();\r\n        props.handleRefresh(props.tickerId);\r\n\r\n    }\r\n    \r\n        return (\r\n            \r\n            <tr>\r\n                <Td>{props.name}</Td>\r\n                <Td>{props.ticker}</Td>\r\n                <Td>${props.price}</Td>\r\n                {props.showBalance ? <Td>{props.balance}</Td> : null}\r\n                <Td>\r\n                    <form>\r\n                    <button onClick={handleClick}>Refresh</button>\r\n                    </form>\r\n                </Td>\r\n            </tr>\r\n            \r\n        );\r\n        \r\n};\r\n\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Coin from '../Coin/Coin';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n    \r\n    return (\r\n        <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          {props.showBalance ? <th>Balance</th> : null}\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.coinData.map( ({key, name, ticker, price, balance}) => \r\n          <Coin key={key} \r\n                handleRefresh={props.handleRefresh}\r\n                name={name} \r\n                ticker={ticker}\r\n                showBalance={props.showBalance}\r\n                balance={balance} \r\n                price={price} \r\n                tickerId={key} />\r\n          )\r\n        }\r\n        \r\n      </tbody>\r\n    </Table>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default function AccountBalance (props) {\r\n    \r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    if (props.showBalance){\r\n        content = <>Balance: ${props.amount}</>;\r\n    }\r\n    return (\r\n        <Section>\r\n            {content}  \r\n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\r\n        </Section>\r\n    );\r\n    \r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 30vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 12px;\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 36px;\r\n`;\r\n  \r\n  \r\n\r\n  \r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n          <Img src={logo} alt=\"React logo\" />\r\n          <H1>\r\n            Coin Exchange\r\n          </H1>\r\n        </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader'; \r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Div = styled.div`\r\n  text-align: center;\r\n  background-color: rgb(21, 21, 117);\r\n  color:#cccccc\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App (props) {\r\n\r\n    const [balance, setBalance] = useState(10000);\r\n    const [showBalance, setShowBalance] = useState(true);\r\n    const [coinData, setCoinData] = useState([]);\r\n\r\n    const componentDidMount = async () => {\r\n      const response = await axios.get('https://api.coinpaprika.com/v1/coins/');\r\n      const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n      const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n      const promises = coinIds.map(id => axios.get(tickerUrl + id));\r\n      const coinData = await Promise.all(promises);\r\n      const coinPriceData = coinData.map(function(response) {\r\n      const coin = response.data;\r\n      \r\n      return {\r\n        key: coin.id,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        balance: 0,\r\n        price: parseFloat(Number(coin.quotes.USD.price).toFixed(4)),\r\n      };\r\n    })\r\n    // Retrieve the prices\r\n    setCoinData(coinPriceData)\r\n    \r\n  }\r\n\r\n    useEffect(function() {\r\n\r\n      if (coinData.length === 0) {\r\n        componentDidMount();\r\n      } \r\n    });\r\n\r\n    \r\n      \r\n \r\n \r\n  const handleBalanceVisibilityChange = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n\r\n  }\r\n\r\n  const handleRefresh = async (valueChangeId) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\r\n    const response = await axios.get(tickerUrl);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map(function(values) {\r\n      let newValues = {...values};\r\n      if ( valueChangeId === values.key) {\r\n        newValues.price = newPrice;\r\n      }      \r\n      return newValues;\r\n    });\r\n                \r\n      \r\n    \r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  \r\n    return (\r\n      <Div>\r\n        <ExchangeHeader />\r\n        <AccountBalance \r\n        amount={balance} \r\n        showBalance={showBalance} \r\n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} />\r\n        <CoinList \r\n        coinData={coinData} \r\n        showBalance={showBalance} \r\n        handleRefresh={handleRefresh}/>\r\n      </Div>\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}